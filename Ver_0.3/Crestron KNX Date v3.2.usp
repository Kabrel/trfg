/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name: Crestron International
System Name:
System Number:
Programmer: CH
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
// #SYMBOL_NAME ""
// #HINT ""
// #DEFINE_CONSTANT
#CATEGORY "0" 
// #DEFAULT_VOLATILE
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
#OUTPUT_SHIFT 1
// #HELP_PDF_FILE ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

#USER_SIMPLSHARP_LIBRARY "CrestronKNXLibrary"
/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
// #CRESTRON_LIBRARY ""
// #USER_LIBRARY ""

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
// DIGITAL_INPUT
DIGITAL_INPUT Initialize, Poll_Value, SendSystemDate;

// BUFFER_INPUT 

DIGITAL_OUTPUT InitializationIsComplete;
ANALOG_OUTPUT Day_Analog, Month_Analog, Year_Analog, _SKIP_;
STRING_OUTPUT Date_Text;

/*******************************************************************************************
  Parameters
  (Uncomment and declare parameters as needed)
*******************************************************************************************/
INTEGER_PARAMETER ipGatewayID;
// SIGNED_INTEGER_PARAMETER
// LONG_INTEGER_PARAMETER
// SIGNED_LONG_INTEGER_PARAMETER
STRING_PARAMETER spAddress[20];


/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
// LONG_INTEGER
// SIGNED_INTEGER
// SIGNED_LONG_INTEGER
// STRING

KNXDateSimplSharpComponent simplSharpComponent;

/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/

PUSH Initialize
{
   	simplSharpComponent.InitializeSettings(ipGatewayID, getSymbolReferenceName(), spAddress);
}

PUSH Poll_Value
{
	simplSharpComponent.PollValue();
}


PUSH SendSystemDate
{
	simplSharpComponent.SendSystemDate();	
}


/*****************************************************
                CALLBACK FUNCTIONS
******************************************************/

Callback Function UpdateDayValueCallback(integer value)
{
	Day_Analog = value;	
}

Callback Function UpdateMonthValueCallback(integer value)
{
	Month_Analog = value;	
}

Callback Function UpdateYearValueCallback(integer value)
{
	Year_Analog = value;	
}

Callback Function UpdateDateValueTextCallback(string value)
{
	Date_Text = value;	
}
     

Callback Function initializationIsCompleteCallback(integer tempState)
{
	InitializationIsComplete = tempState;	
}



callback function basicInitializationIsCompleteHandler()
{
	RegisterDelegate(simplSharpComponent, initializationIsComplete, initializationIsCompleteCallback);
    RegisterDelegate(simplSharpComponent, UpdateDayValue, UpdateDayValueCallback);	
	RegisterDelegate(simplSharpComponent, UpdateMonthValue, UpdateMonthValueCallback);
	RegisterDelegate(simplSharpComponent, UpdateYearValue, UpdateYearValueCallback);
	RegisterDelegate(simplSharpComponent, UpdateDateValueText, UpdateDateValueTextCallback);

    simplSharpComponent.BeginInitialization();
}



/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/

Function Main()
{                
	WaitForInitializationComplete();
    RegisterDelegate(simplSharpComponent, basicInitializationIsComplete, basicInitializationIsCompleteHandler);
}


