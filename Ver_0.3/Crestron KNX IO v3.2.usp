/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name:
System Name:
System Number:
Programmer: CH
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
// #SYMBOL_NAME ""
// #HINT ""
#DEFINE_CONSTANT MAXGROUPS			500
#DEFINE_CONSTANT MAXGROUPSx4        2000
#CATEGORY "0" //Invisible
// #DEFAULT_VOLATILE
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND
// #OUTPUT_SHIFT 
// #HELP_PDF_FILE ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
#USER_SIMPLSHARP_LIBRARY "CrestronKNXLibrary"

/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
// #CRESTRON_LIBRARY ""
// #USER_LIBRARY ""

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT Initialize, PollAll;
DIGITAL_INPUT EnableDebugMode;
DIGITAL_OUTPUT InitializationIsComplete;
ANALOG_OUTPUT ConnectionStatus;
//STRING_OUTPUT Tx$;
//STRING_OUTPUT _SKIP_, Feedback$[MAXGROUPS];



/*******************************************************************************************
  Parameters
  (Uncomment and declare parameters as needed)
*******************************************************************************************/
INTEGER_PARAMETER	ipGatewayID, ipNetwerkPort,gatewayType;
STRING_PARAMETER	spIPAddress[15];

/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/


KNXRouterSimplSharpComponent SimplSharpComponent;


/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/

PUSH Initialize
{	
	SimplSharpComponent.InitializeSettings(ipGatewayID, gatewayType, getSymbolReferenceName(), spIPAddress, ipNetwerkPort);
}

PUSH PollAll
{
	SimplSharpComponent.PollAllAddresses();            
}

PUSH EnableDebugMode
{
    SimplSharpComponent.ChangeDebugMode(1);
}

RELEASE EnableDebugMode
{
    SimplSharpComponent.ChangeDebugMode(0);
}

/*****************************************************
                CALLBACK FUNCTIONS
******************************************************/




     

Callback Function UpdateConnectionStatuCallback(integer value)
{
	ConnectionStatus = value;
}

Callback Function initializationIsCompleteCallback(integer tempState)
{
	InitializationIsComplete = tempState;	
}



callback function basicInitializationIsCompleteHandler()
{
	RegisterDelegate(simplSharpComponent, initializationIsComplete, initializationIsCompleteCallback);
    RegisterDelegate(SimplSharpComponent, UpdateConnectionStatus, UpdateConnectionStatuCallback);

    simplSharpComponent.BeginInitialization();
}




/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/

Function Main()
{                
	WaitForInitializationComplete();
    RegisterDelegate(simplSharpComponent, basicInitializationIsComplete, basicInitializationIsCompleteHandler);
}

